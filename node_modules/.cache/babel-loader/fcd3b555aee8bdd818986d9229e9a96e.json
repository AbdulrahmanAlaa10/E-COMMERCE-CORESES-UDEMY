{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/abdelrahman/app-commerce/src/OnlineProduct/index.js\";\nimport React, { Component, useState } from \"react\";\nimport { getById } from \"../api/products\";\nimport { addToCart } from \"../Actions/actions\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\n\nclass OnlineProduct extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      quantity: 1,\n      foood: {}\n    };\n\n    this.handleQuantity = event => {\n      const value = event.target.value;\n      if (value < 1) return;\n      this.setState({\n        quantity: value\n      });\n    };\n\n    this.addToCart = foood => {\n      this.props.addToCart(foood, this.state.quantity);\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    getById(parseInt(id)).then(foood => {\n      this.setState({\n        foood,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    if (this.state.loading) return 'Loading ^..^';\n    const foood = this.state.foood;\n    const quantity = this.state.quantity;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'row',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: foood.img,\n            width: '100%'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: foood.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: foood.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Price \", foood.price, \" $\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"inpuppppppt\",\n            value: quantity,\n            onChange: this.handleQuantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Price: \", quantity * foood.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-info\",\n            onClick: () => this.addToCart(foood),\n            children: \"Add Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/Paid\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-info\",\n              children: \"Buy Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: (productInfo, quantity) => dispatch(addToCart(productInfo, quantity))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(OnlineProduct);","map":{"version":3,"sources":["/home/abdelrahman/app-commerce/src/OnlineProduct/index.js"],"names":["React","Component","useState","getById","addToCart","connect","Link","loadStripe","CardElement","Elements","useElements","useStripe","OnlineProduct","state","loading","quantity","foood","handleQuantity","event","value","target","setState","props","componentDidMount","id","match","params","parseInt","then","render","img","name","description","price","mapDispatchToProps","dispatch","productInfo"],"mappings":"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","sourcesContent":["import React, { Component , useState } from \"react\";\nimport { getById } from \"../api/products\";\nimport {addToCart} from \"../Actions/actions\";\nimport {connect} from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {loadStripe} from '@stripe/stripe-js';\nimport {CardElement, Elements, useElements, useStripe} from '@stripe/react-stripe-js';\n\nclass OnlineProduct extends Component{\n\n\n    state ={\n        loading: true,\n        quantity : 1,\n        foood: {}\n    };\n\n    componentDidMount(){\n        const id = this.props.match.params.id;\n\n        getById(parseInt(id)) \n           .then(foood => {\n               this.setState({\n                   foood,\n                   loading: false\n               });\n           })\n\n    }\n\n    handleQuantity = (event) => {\n        const value = event.target.value;\n        if(value < 1)\n        return ;\n\n        this.setState({\n            quantity: value\n        })\n    }\n    addToCart = (foood) => {\n        this.props.addToCart(foood, this.state.quantity);\n    }\n\n\n    render(){\n        if(this.state.loading)\n        return 'Loading ^..^';\n        const foood = this.state.foood;\n        const quantity =this.state.quantity;\n\n        return (\n            <div>\n                <div className={'row'}>\n                    <div className=\"col-6\">\n                        <img src={foood.img} width={'100%'} />\n                    </div>\n                    <div className=\"col-6\">\n                    <h1>{foood.name}</h1>\n                    <p className=\"card-text\">{foood.description}</p>\n                    <p> Price {foood.price} $</p>\n                        \n                       \n                    <input type=\"number\" className=\"inpuppppppt\" value={quantity} onChange={this.handleQuantity} />\n                    <p>Total Price: {quantity * foood.price }</p>\n                    <button className=\"btn btn-info\" onClick={() => this.addToCart(foood)}>\n                        Add Cart\n                    </button>\n\n                    <Link to=\"/Paid\">\n                        <button className=\"btn btn-info\">Buy Now</button>\n                    </Link>\n                    </div>\n                \n                </div>\n                </div>\n     \n    \n        );\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addToCart: (productInfo, quantity) => dispatch(addToCart(productInfo, quantity)),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(OnlineProduct);\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}